# NOTE:               The build lifecycle on Travis.ci is something like this:
#    before_install
#    install
#    before_script
#    script
#    after_success or after_failure
#    after_script
#    OPTIONAL before_deploy
#    OPTIONAL deploy
#    OPTIONAL after_deploy

matrix:
  allow_failures:
    - os: osx
  include:
    - os: linux
      dist: trusty # 14.04
      sudo: required
      language: c++
      before_install: sudo apt-get update
      updateaddons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - cmake
            - python-dev
            - python-numpy
            - libeigen3-dev
            - freeglut3-dev # OpenGL
      before_script:
            - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
            - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
            - sudo apt-get update
            - sudo apt-get install ros-indigo-ros-base
            - sudo rosdep init
            - rosdep update
            - source /opt/ros/indigo/setup.bash
            - sudo apt-get install ros-indigo-opencv3 ros-indigo-eigen-conversions

      script:
        # Export CC and CXX to tell cmake which compiler to use
        # - export CC=/usr/bin/gcc-6
        # - export CXX=/usr/bin/g++-6
        # Check versions of gcc, g++ and cmake
        - gcc -v && g++ -v && cmake --version
        # Run your build commands next
        - ./tools/build.sh
        - ./test/test.sh

    - os: osx
      osx_image: xcode7.3
      sudo: required
      language: objective-c
      before_script:
        # http://seeb0h.github.io/howto/howto-install-homebrew-python-opencv-osx-el-capitan/
        - brew update
        - brew tap homebrew/science
        - brew install opencv3 --without-python --with-python3
        - echo /usr/local/opt/opencv3/lib/python3.6/site-packages >> /usr/local/lib/python3.6/site-packages/opencv3.pth


        # - brew update
        # - brew upgrade python
        # - brew upgrade numpy
        # - brew linkapps python
        # - brew install gcc
        # - sudo pip install -U matplotlib scikit-learn scikit-image
        # - brew install tesseract
        # - brew tap homebrew/science
        # - brew install opencv3
        # - ln -s /usr/local/opt/opencv3/lib/python2.7/site-packages/cv2.so /usr/local/lib/python2.7/site-packages/
        - sh tools/ios/generate_om_fw.sh
      script:
        - cd fw_build
        - xcodebuild -target OpenMapper -sdk iphoneos ONLY_ACTIVE_ARCH=FALSE
